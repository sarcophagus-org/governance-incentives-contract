/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  Collection,
  CollectionInterface,
} from "../../contracts/Collection";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "claim",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_to",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "_shares",
        type: "uint256[]",
      },
    ],
    name: "distribute",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "toBeClaimed",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "toBeDistributed",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60a06040523480156200001157600080fd5b5060405162001902380380620019028339818101604052810190620000379190620001c8565b620000576200004b6200009260201b60201c565b6200009a60201b60201c565b8073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff168152505050620001fa565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620001908262000163565b9050919050565b620001a28162000183565b8114620001ae57600080fd5b50565b600081519050620001c28162000197565b92915050565b600060208284031215620001e157620001e06200015e565b5b6000620001f184828501620001b1565b91505092915050565b6080516116bb62000247600039600081816102e10152818161044e0152818161061a01528181610734015281816107f301528181610921015281816109cd0152610ab201526116bb6000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c8063715018a611610071578063715018a6146101695780638da5cb5b14610173578063b6b55f2514610191578063cc5b542e146101ad578063f2fde38b146101cb578063fc0c546a146101e7576100b4565b806318160ddd146100b95780632929abe6146100d75780633ccfd60b146100f35780634e71d92d146100fd57806367ee62f41461011b57806370a0823114610139575b600080fd5b6100c1610205565b6040516100ce9190610d65565b60405180910390f35b6100f160048036038101906100ec919061103a565b61020b565b005b6100fb6102d4565b005b61010561052e565b6040516101129190610d65565b60405180910390f35b6101236106c0565b6040516101309190610d65565b60405180910390f35b610153600480360381019061014e91906110b2565b6106c6565b6040516101609190610d65565b60405180910390f35b6101716106de565b005b61017b6106f2565b60405161018891906110ee565b60405180910390f35b6101ab60048036038101906101a69190611109565b61071b565b005b6101b5610896565b6040516101c29190610d65565b60405180910390f35b6101e560048036038101906101e091906110b2565b61089c565b005b6101ef61091f565b6040516101fc9190611195565b60405180910390f35b60015481565b610213610943565b61021b6109c1565b60005b82518110156102cf5761024b3083838151811061023e5761023d6111b0565b5b6020026020010151610b9a565b610289838281518110610261576102606111b0565b5b602002602001015183838151811061027c5761027b6111b0565b5b6020026020010151610c0d565b81818151811061029c5761029b6111b0565b5b6020026020010151600360008282546102b5919061120e565b9250508190555080806102c790611264565b91505061021e565b505050565b6102dc610943565b6003547f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161033891906110ee565b602060405180830381865afa158015610355573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061037991906112c1565b61038391906112ee565b600460003073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414610403576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103fa9061137f565b60405180910390fd5b61044c30600460003073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610b9a565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166323b872dd3033600460003073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518463ffffffff1660e01b81526004016104e89392919061139f565b6020604051808303816000875af1158015610507573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061052b919061140e565b50565b600080600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054116105b1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105a8906114ad565b60405180910390fd5b6000600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506105ff3382610b9a565b806003600082825461061191906112ee565b925050819055507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166323b872dd3033846040518463ffffffff1660e01b81526004016106759392919061139f565b6020604051808303816000875af1158015610694573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106b8919061140e565b508091505090565b60035481565b60046020528060005260406000206000915090505481565b6106e6610943565b6106f06000610c80565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000806001540361073257816001819055506107e7565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161078b91906110ee565b602060405180830381865afa1580156107a8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107cc91906112c1565b600154836107da91906114cd565b6107e49190611556565b90505b6107f13082610c0d565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b815260040161084e9392919061139f565b6020604051808303816000875af115801561086d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610891919061140e565b505050565b60025481565b6108a4610943565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610913576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161090a906115f9565b60405180910390fd5b61091c81610c80565b50565b7f000000000000000000000000000000000000000000000000000000000000000081565b61094b610d44565b73ffffffffffffffffffffffffffffffffffffffff166109696106f2565b73ffffffffffffffffffffffffffffffffffffffff16146109bf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109b690611665565b60405180910390fd5b565b600060035403610aad577f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610a2491906110ee565b602060405180830381865afa158015610a41573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a6591906112c1565b600460003073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610b98565b6003547f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610b0991906110ee565b602060405180830381865afa158015610b26573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b4a91906112c1565b610b5491906112ee565b600460003073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b565b8060016000828254610bac91906112ee565b9250508190555080600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610c0291906112ee565b925050819055505050565b8060016000828254610c1f919061120e565b9250508190555080600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610c75919061120e565b925050819055505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b6000819050919050565b610d5f81610d4c565b82525050565b6000602082019050610d7a6000830184610d56565b92915050565b6000604051905090565b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610de282610d99565b810181811067ffffffffffffffff82111715610e0157610e00610daa565b5b80604052505050565b6000610e14610d80565b9050610e208282610dd9565b919050565b600067ffffffffffffffff821115610e4057610e3f610daa565b5b602082029050602081019050919050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610e8182610e56565b9050919050565b610e9181610e76565b8114610e9c57600080fd5b50565b600081359050610eae81610e88565b92915050565b6000610ec7610ec284610e25565b610e0a565b90508083825260208201905060208402830185811115610eea57610ee9610e51565b5b835b81811015610f135780610eff8882610e9f565b845260208401935050602081019050610eec565b5050509392505050565b600082601f830112610f3257610f31610d94565b5b8135610f42848260208601610eb4565b91505092915050565b600067ffffffffffffffff821115610f6657610f65610daa565b5b602082029050602081019050919050565b610f8081610d4c565b8114610f8b57600080fd5b50565b600081359050610f9d81610f77565b92915050565b6000610fb6610fb184610f4b565b610e0a565b90508083825260208201905060208402830185811115610fd957610fd8610e51565b5b835b818110156110025780610fee8882610f8e565b845260208401935050602081019050610fdb565b5050509392505050565b600082601f83011261102157611020610d94565b5b8135611031848260208601610fa3565b91505092915050565b6000806040838503121561105157611050610d8a565b5b600083013567ffffffffffffffff81111561106f5761106e610d8f565b5b61107b85828601610f1d565b925050602083013567ffffffffffffffff81111561109c5761109b610d8f565b5b6110a88582860161100c565b9150509250929050565b6000602082840312156110c8576110c7610d8a565b5b60006110d684828501610e9f565b91505092915050565b6110e881610e76565b82525050565b600060208201905061110360008301846110df565b92915050565b60006020828403121561111f5761111e610d8a565b5b600061112d84828501610f8e565b91505092915050565b6000819050919050565b600061115b61115661115184610e56565b611136565b610e56565b9050919050565b600061116d82611140565b9050919050565b600061117f82611162565b9050919050565b61118f81611174565b82525050565b60006020820190506111aa6000830184611186565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061121982610d4c565b915061122483610d4c565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611259576112586111df565b5b828201905092915050565b600061126f82610d4c565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036112a1576112a06111df565b5b600182019050919050565b6000815190506112bb81610f77565b92915050565b6000602082840312156112d7576112d6610d8a565b5b60006112e5848285016112ac565b91505092915050565b60006112f982610d4c565b915061130483610d4c565b925082821015611317576113166111df565b5b828203905092915050565b600082825260208201905092915050565b7f5769746864726177696e6720756e636c61696d656420746f6b656e7300000000600082015250565b6000611369601c83611322565b915061137482611333565b602082019050919050565b600060208201905081810360008301526113988161135c565b9050919050565b60006060820190506113b460008301866110df565b6113c160208301856110df565b6113ce6040830184610d56565b949350505050565b60008115159050919050565b6113eb816113d6565b81146113f657600080fd5b50565b600081519050611408816113e2565b92915050565b60006020828403121561142457611423610d8a565b5b6000611432848285016113f9565b91505092915050565b7f436c61696d20756e7375636365737366756c3a20796f75722062616c616e636560008201527f2069732030000000000000000000000000000000000000000000000000000000602082015250565b6000611497602583611322565b91506114a28261143b565b604082019050919050565b600060208201905081810360008301526114c68161148a565b9050919050565b60006114d882610d4c565b91506114e383610d4c565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561151c5761151b6111df565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061156182610d4c565b915061156c83610d4c565b92508261157c5761157b611527565b5b828204905092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b60006115e3602683611322565b91506115ee82611587565b604082019050919050565b60006020820190508181036000830152611612816115d6565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b600061164f602083611322565b915061165a82611619565b602082019050919050565b6000602082019050818103600083015261167e81611642565b905091905056fea264697066735822122074765851fa3e6e3677b4d5ef4faee98166bdcafd8f0995e09376fee77cfc937764736f6c634300080d0033";

type CollectionConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CollectionConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Collection__factory extends ContractFactory {
  constructor(...args: CollectionConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _token: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Collection> {
    return super.deploy(_token, overrides || {}) as Promise<Collection>;
  }
  override getDeployTransaction(
    _token: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_token, overrides || {});
  }
  override attach(address: string): Collection {
    return super.attach(address) as Collection;
  }
  override connect(signer: Signer): Collection__factory {
    return super.connect(signer) as Collection__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CollectionInterface {
    return new utils.Interface(_abi) as CollectionInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Collection {
    return new Contract(address, _abi, signerOrProvider) as Collection;
  }
}
